# haproxy version:  2.8.6
global
        log /dev/log    local0
        log /dev/log    local1 notice
        # chroot /var/lib/haproxy
        # stats socket /run/haproxy/admin.sock mode 660 level admin
        # stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        # stats socket /var/run/api.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /usr/local/etc/haproxy/errors/400.http
        errorfile 403 /usr/local/etc/haproxy/errors/403.http
        errorfile 408 /usr/local/etc/haproxy/errors/408.http
        errorfile 500 /usr/local/etc/haproxy/errors/500.http
        errorfile 502 /usr/local/etc/haproxy/errors/502.http
        errorfile 503 /usr/local/etc/haproxy/errors/503.http
        errorfile 504 /usr/local/etc/haproxy/errors/504.http

frontend demo
        bind *:8000
        mode http
        
        # use_backend demo_socket if { path_beg /dev/websocket }
        # using vpce
        # use_backend demo_rest if { path_beg /dev/hello }

        # https://jsonplaceholder.typicode.com/todos/1
        use_backend demo_api if { path_beg / }

        default_backend demo

# don't give ' ' in %[]
# backend demo_socket
#         http-request set-header Host q0p9z14iv1.execute-api.ap-south-1.amazonaws.com
#         http-request set-path %[path,regsub(^/dev/websocket,/dev,g)]
#         server server1 q0p9z14iv1.execute-api.ap-south-1.amazonaws.com:443 ssl verify required ca-file /etc/ssl/certs/ check

# backend demo_rest
#         http-request set-header Host ydmbfyel9j.execute-api.ap-south-1.amazonaws.com
#         #http-request set-path %[path,regsub(^/dev/hello,/dev,g)]
#         server server1 vpce-0dde85a7746bd4c16-9zcudix2.execute-api.ap-south-1.vpce.amazonaws.com:443 ssl verify required ca-file /etc/ssl/certs/ check

backend demo_api
        http-request set-header Host jsonplaceholder.typicode.com
        server server1 jsonplaceholder.typicode.com:443 ssl verify required ca-file /etc/ssl/certs/ check

backend demo
        server server1 127.0.0.1:9000 check
